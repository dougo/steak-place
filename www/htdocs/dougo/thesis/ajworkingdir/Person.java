/*   Generated by AspectJ version 1.0.4 */
class Person {
  static org.aspectj.runtime.reflect.Factory ajc$JPF;
  private static org.aspectj.lang.JoinPoint.StaticPart fullName$ajcjp1;
  private static org.aspectj.lang.JoinPoint.StaticPart fullName$ajcjp2;
  public static void main(String[] args) {
    Knight gandalf = new Knight("Ian", "McKellan");
    System.out.println(Person.fullName$method_call(gandalf));
  } 

  String fname;
  String lname;
  Person(String f, String l) {
    super();
    this.fname = f;
    this.lname = l;
  } 
  String fullName() {
    {
      if (!Logging.cflow$ajc0.isValid()) Logging.aspectInstance.before0$ajc(this, 
          Person.fullName$ajcjp2);
    } 
    return this.fullName$ajcPostCall();
  } 

  String fullName$ajcPostCall() {
    Logging.cflow$ajc0.push(new org.aspectj.runtime.CFlow());
    try {
      return this.fname + " " + this.lname;
    } finally {
      Logging.cflow$ajc0.pop();
    } 
  } 

  private static String fullName$method_call(Knight target) {
    {
      if (!Logging.cflow$ajc0.isValid()) Logging.aspectInstance.before0$ajc(target, 
          Person.fullName$ajcjp1);
    } 
    return target.fullName$ajcPostCall();
  } 

  static {
    Person.ajc$JPF = new org.aspectj.runtime.reflect.Factory("Person.java", Person.class);
    Person.fullName$ajcjp1 = Person.ajc$JPF.makeSJP("method-call", 
        Person.ajc$JPF.makeMethodSig("0-fullName-Knight----java.lang.String-"), 4, 24);
    Person.fullName$ajcjp2 = Person.ajc$JPF.makeSJP("method-call", 
        Person.ajc$JPF.makeMethodSig("0-fullName-Person----java.lang.String-"), null);
  } 

} 