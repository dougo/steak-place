// This file was generated by DAJ from Structure.cd.

aspect StructureParsing {
  public static A A.parse(java.io.Reader in)
    throws antlr.ANTLRException
  {
    return new StructureParser(new StructureLexer(in)).parseA();
  }
  public static A A.parse(java.io.File in)
    throws antlr.ANTLRException, java.io.FileNotFoundException
  {
    return parse(new java.io.BufferedReader(new java.io.FileReader(in)));
  }
  public static A A.parse(String in) {
    try {
      return parse(new java.io.StringReader(in));
    } catch (antlr.ANTLRException e) {
      throw new RuntimeException(e);
    }
  }
  public static B B.parse(java.io.Reader in)
    throws antlr.ANTLRException
  {
    return new StructureParser(new StructureLexer(in)).parseB();
  }
  public static B B.parse(java.io.File in)
    throws antlr.ANTLRException, java.io.FileNotFoundException
  {
    return parse(new java.io.BufferedReader(new java.io.FileReader(in)));
  }
  public static B B.parse(String in) {
    try {
      return parse(new java.io.StringReader(in));
    } catch (antlr.ANTLRException e) {
      throw new RuntimeException(e);
    }
  }
  public static D D.parse(java.io.Reader in)
    throws antlr.ANTLRException
  {
    return new StructureParser(new StructureLexer(in)).parseD();
  }
  public static D D.parse(java.io.File in)
    throws antlr.ANTLRException, java.io.FileNotFoundException
  {
    return parse(new java.io.BufferedReader(new java.io.FileReader(in)));
  }
  public static D D.parse(String in) {
    try {
      return parse(new java.io.StringReader(in));
    } catch (antlr.ANTLRException e) {
      throw new RuntimeException(e);
    }
  }
  public static C C.parse(java.io.Reader in)
    throws antlr.ANTLRException
  {
    return new StructureParser(new StructureLexer(in)).parseC();
  }
  public static C C.parse(java.io.File in)
    throws antlr.ANTLRException, java.io.FileNotFoundException
  {
    return parse(new java.io.BufferedReader(new java.io.FileReader(in)));
  }
  public static C C.parse(String in) {
    try {
      return parse(new java.io.StringReader(in));
    } catch (antlr.ANTLRException e) {
      throw new RuntimeException(e);
    }
  }
  public static Y Y.parse(java.io.Reader in)
    throws antlr.ANTLRException
  {
    return new StructureParser(new StructureLexer(in)).parseY();
  }
  public static Y Y.parse(java.io.File in)
    throws antlr.ANTLRException, java.io.FileNotFoundException
  {
    return parse(new java.io.BufferedReader(new java.io.FileReader(in)));
  }
  public static Y Y.parse(String in) {
    try {
      return parse(new java.io.StringReader(in));
    } catch (antlr.ANTLRException e) {
      throw new RuntimeException(e);
    }
  }
  public static Z Z.parse(java.io.Reader in)
    throws antlr.ANTLRException
  {
    return new StructureParser(new StructureLexer(in)).parseZ();
  }
  public static Z Z.parse(java.io.File in)
    throws antlr.ANTLRException, java.io.FileNotFoundException
  {
    return parse(new java.io.BufferedReader(new java.io.FileReader(in)));
  }
  public static Z Z.parse(String in) {
    try {
      return parse(new java.io.StringReader(in));
    } catch (antlr.ANTLRException e) {
      throw new RuntimeException(e);
    }
  }
  public static E E.parse(java.io.Reader in)
    throws antlr.ANTLRException
  {
    return new StructureParser(new StructureLexer(in)).parseE();
  }
  public static E E.parse(java.io.File in)
    throws antlr.ANTLRException, java.io.FileNotFoundException
  {
    return parse(new java.io.BufferedReader(new java.io.FileReader(in)));
  }
  public static E E.parse(String in) {
    try {
      return parse(new java.io.StringReader(in));
    } catch (antlr.ANTLRException e) {
      throw new RuntimeException(e);
    }
  }
}
